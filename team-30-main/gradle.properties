


# Legg til din personlige Google Maps API-nøkkel her:
#   Gå til Google Cloud Console (https://console.cloud.google.com/)
#   Klikk på "Create Project" for å opprette et nytt prosjekt hvis du ikke allerede har ett
#   I søkefeltet øverst på siden, søk på "Places API" og aktiver denne
#   Søk også på "Time Zone API" og aktiver denne
#   Naviger/søk på "Google Maps Platform" og klikk på "Keys and credentials" i sidemenyen
#   Klikk på "Create credentials" og velg "API key"
#   Erstatt "DIN_EGEN_API_KEY" ved å kopiere og lime inn den genererte API-nøkkelen
#   Inne på Android Studio, trykk på "Sync Now" (ved siden av "Gradle files have changed since last project sync...")
#   Appen er nå klar til å kjøres!
MAPS_API_KEY="AIzaSyDbeJFuFgHywm7inXZfB9Pxh3wixxYm_0g"
        # hvis kildekoden publiseres utenfor GitHub UiO så ligger instrukser over og den personlige api-nøkkelen fjernes fra koden,
        # men ellers er en personlig google maps api key lagt til fra før, ikke abuse api-nøkkelen please!<3


















# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true
